
trigger:
  - main
  - develop

pool:
  name: Default
  demands:
    - agent.name -equals master-node

variables:
  tag: "$(Build.BuildId)"
  variables:
  imageName: 'my-node-app'
  dockerRegistryServiceConnection: 'MyACRServiceConnection'  # Azure DevOps Docker registry connection name
  containerRegistry: 'myacr.azurecr.io'

stages:

  - stage: Test
    displayName: Test App
    jobs:
      - job: Lint
        displayName: Lint App
        steps:
          - task: UseNode@1
            inputs:
              version: '23.x'
          - script: |
              npm ci
            displayName: 'Install Dependencies'
          - script: |
              npm run lint
            displayName: 'Run Lint'
      - job: UnitTest
        displayName: UnitTest App
        steps:
          - task: UseNode@1
            inputs:
              version: '23.x'
          - script: |
              npm ci
              npx playwright install
            displayName: 'Install Dependencies'
          - script: |
              npm run test
            displayName: 'Run Unit Tests'
      - job: E2ETest
        displayName: E2E Test App
        steps:
          - task: UseNode@1
            inputs:
              version: '23.x'
          - script: |
              npm ci
              npx playwright install
            displayName: 'Install Dependencies'
          - script: |
              npm run playwright
            displayName: 'Run E2E Tests'

    #   steps:
    #   - task: Docker@2
    #     displayName: Build an image
    #     inputs:
    #       command: build
    #       dockerfile: '$(Build.SourcesDirectory)/Dockerfile.prod'
    #       tags: |
    #         $(tag)
